<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.lime.mapper.qualify.UnqualifyMapper">
  <select id="selectUnqualifyJsonById" resultMap="LeftJoinMap">
    select
    u.unqualify_apply_id,
    u.product_id,
    u.unqualify_item,
    u.unqualify_count,
    u.assembly_date,
    u.emp_id,
    u.apply_date,
    u.note,
    e.emp_name,
    p.product_name
    from unqualify_apply u
    left join employee e on u.emp_id = e.emp_id
    left join product p on u.product_id = p.product_id
    where u.unqualify_apply_id = #{unqualifyApplyId}
  </select>
  <resultMap id="LeftJoinMap" type="cn.lime.entity.qualify.UnqualifyJson">
    <result column="unqualify_apply_id" jdbcType="VARCHAR" property="unqualifyApplyId" />
    <result column="product_id" jdbcType="VARCHAR" property="productId" />
    <result column="unqualify_item" jdbcType="VARCHAR" property="unqualifyItem" />
    <result column="unqualify_count" jdbcType="INTEGER" property="unqualifyCount" />
    <result column="assembly_date" jdbcType="TIMESTAMP" property="assemblyDate" />
    <result column="emp_id" jdbcType="VARCHAR" property="empId" />
    <result column="apply_date" jdbcType="TIMESTAMP" property="applyDate" />
    <result column="note" jdbcType="VARCHAR" property="note" />
    <result column="emp_id" jdbcType="VARCHAR" property="empId" />
    <result column="emp_name" jdbcType="VARCHAR" property="empName" />
    <result column="product_name" jdbcType="VARCHAR" property="productName" />
  </resultMap>
  <resultMap id="BaseResultMap" type="cn.lime.entity.qualify.Unqualify">
    <id column="unqualify_apply_id" jdbcType="VARCHAR" property="unqualifyApplyId" />
    <result column="product_id" jdbcType="VARCHAR" property="productId" />
    <result column="unqualify_item" jdbcType="VARCHAR" property="unqualifyItem" />
    <result column="unqualify_count" jdbcType="INTEGER" property="unqualifyCount" />
    <result column="assembly_date" jdbcType="TIMESTAMP" property="assemblyDate" />
    <result column="emp_id" jdbcType="VARCHAR" property="empId" />
    <result column="apply_date" jdbcType="TIMESTAMP" property="applyDate" />
    <result column="note" jdbcType="VARCHAR" property="note" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    unqualify_apply_id, product_id, unqualify_item, unqualify_count, assembly_date, emp_id, 
    apply_date, note
  </sql>
  <select id="selectByExample" parameterType="cn.lime.entity.qualify.UnqualifyExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from unqualify_apply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from unqualify_apply
    where unqualify_apply_id = #{unqualifyApplyId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from unqualify_apply
    where unqualify_apply_id = #{unqualifyApplyId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.lime.entity.qualify.UnqualifyExample">
    delete from unqualify_apply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.lime.entity.qualify.Unqualify">
    insert into unqualify_apply (unqualify_apply_id, product_id, unqualify_item, 
      unqualify_count, assembly_date, emp_id, 
      apply_date, note)
    values (#{unqualifyApplyId,jdbcType=VARCHAR}, #{productId,jdbcType=VARCHAR}, #{unqualifyItem,jdbcType=VARCHAR}, 
      #{unqualifyCount,jdbcType=INTEGER}, #{assemblyDate,jdbcType=TIMESTAMP}, #{empId,jdbcType=VARCHAR}, 
      #{applyDate,jdbcType=TIMESTAMP}, #{note,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.lime.entity.qualify.Unqualify">
    insert into unqualify_apply
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="unqualifyApplyId != null">
        unqualify_apply_id,
      </if>
      <if test="productId != null">
        product_id,
      </if>
      <if test="unqualifyItem != null">
        unqualify_item,
      </if>
      <if test="unqualifyCount != null">
        unqualify_count,
      </if>
      <if test="assemblyDate != null">
        assembly_date,
      </if>
      <if test="empId != null">
        emp_id,
      </if>
      <if test="applyDate != null">
        apply_date,
      </if>
      <if test="note != null">
        note,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="unqualifyApplyId != null">
        #{unqualifyApplyId,jdbcType=VARCHAR},
      </if>
      <if test="productId != null">
        #{productId,jdbcType=VARCHAR},
      </if>
      <if test="unqualifyItem != null">
        #{unqualifyItem,jdbcType=VARCHAR},
      </if>
      <if test="unqualifyCount != null">
        #{unqualifyCount,jdbcType=INTEGER},
      </if>
      <if test="assemblyDate != null">
        #{assemblyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="empId != null">
        #{empId,jdbcType=VARCHAR},
      </if>
      <if test="applyDate != null">
        #{applyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.lime.entity.qualify.UnqualifyExample" resultType="java.lang.Long">
    select count(*) from unqualify_apply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update unqualify_apply
    <set>
      <if test="record.unqualifyApplyId != null">
        unqualify_apply_id = #{record.unqualifyApplyId,jdbcType=VARCHAR},
      </if>
      <if test="record.productId != null">
        product_id = #{record.productId,jdbcType=VARCHAR},
      </if>
      <if test="record.unqualifyItem != null">
        unqualify_item = #{record.unqualifyItem,jdbcType=VARCHAR},
      </if>
      <if test="record.unqualifyCount != null">
        unqualify_count = #{record.unqualifyCount,jdbcType=INTEGER},
      </if>
      <if test="record.assemblyDate != null">
        assembly_date = #{record.assemblyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.empId != null">
        emp_id = #{record.empId,jdbcType=VARCHAR},
      </if>
      <if test="record.applyDate != null">
        apply_date = #{record.applyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.note != null">
        note = #{record.note,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update unqualify_apply
    set unqualify_apply_id = #{record.unqualifyApplyId,jdbcType=VARCHAR},
      product_id = #{record.productId,jdbcType=VARCHAR},
      unqualify_item = #{record.unqualifyItem,jdbcType=VARCHAR},
      unqualify_count = #{record.unqualifyCount,jdbcType=INTEGER},
      assembly_date = #{record.assemblyDate,jdbcType=TIMESTAMP},
      emp_id = #{record.empId,jdbcType=VARCHAR},
      apply_date = #{record.applyDate,jdbcType=TIMESTAMP},
      note = #{record.note,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.lime.entity.qualify.Unqualify">
    update unqualify_apply
    <set>
      <if test="productId != null">
        product_id = #{productId,jdbcType=VARCHAR},
      </if>
      <if test="unqualifyItem != null">
        unqualify_item = #{unqualifyItem,jdbcType=VARCHAR},
      </if>
      <if test="unqualifyCount != null">
        unqualify_count = #{unqualifyCount,jdbcType=INTEGER},
      </if>
      <if test="assemblyDate != null">
        assembly_date = #{assemblyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="empId != null">
        emp_id = #{empId,jdbcType=VARCHAR},
      </if>
      <if test="applyDate != null">
        apply_date = #{applyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
    </set>
    where unqualify_apply_id = #{unqualifyApplyId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.lime.entity.qualify.Unqualify">
    update unqualify_apply
    set product_id = #{productId,jdbcType=VARCHAR},
      unqualify_item = #{unqualifyItem,jdbcType=VARCHAR},
      unqualify_count = #{unqualifyCount,jdbcType=INTEGER},
      assembly_date = #{assemblyDate,jdbcType=TIMESTAMP},
      emp_id = #{empId,jdbcType=VARCHAR},
      apply_date = #{applyDate,jdbcType=TIMESTAMP},
      note = #{note,jdbcType=VARCHAR}
    where unqualify_apply_id = #{unqualifyApplyId,jdbcType=VARCHAR}
  </update>
</mapper>